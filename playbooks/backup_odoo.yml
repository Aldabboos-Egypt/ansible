---
- name: Backup Odoo databases on multiple servers
  hosts: all
  vars:
    backup_dir: /root/odoo_backups

  tasks:
    - name: Create backup directory
      file:
        path: "{{ backup_dir }}"
        state: directory

    - name: Create Odoo database backup using curl
      command: >
        curl -X POST
        -F "master_pwd={{ admin_password }}"
        -F "name={{ odoo_database }}"
        -F "backup_format=zip"
        -o "{{ backup_dir }}/{{ odoo_database }}_{{ lookup('pipe', 'date +%F_%H-%M-%S') }}.zip"
        https://{{ odoo_database }}/web/database/backup
      register: curl_result
      failed_when: curl_result.rc != 0 or "End-of-central-directory signature not found" in curl_result.stderr
      changed_when: curl_result.stdout != ""

    - name: Verify the backup file
      command: "unzip -t {{ backup_dir }}/{{ odoo_database }}_{{ lookup('pipe', 'date +%F_%H-%M-%S') }}.zip"
      register: unzip_result
      ignore_errors: yes
      changed_when: false
      failed_when: unzip_result.rc != 0 or unzip_result.stdout.find('No errors detected') == -1

    - name: Remove invalid backup file
      file:
        path: "{{ backup_dir }}/{{ odoo_database }}_{{ lookup('pipe', 'date +%F_%H-%M-%S') }}.zip"
        state: absent
      when: unzip_result.rc != 0

    - name: Delete old backups
      find:
        paths: "{{ backup_dir }}"
        patterns: "{{ odoo_database }}_*.zip"
        age: 7d
        recurse: yes
      register: old_backups

    - name: Remove old backups
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_backups.files }}"
      when: old_backups.matched > 0
